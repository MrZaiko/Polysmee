plugins {
    id 'com.android.application'
    id 'jacoco'
    id 'com.google.gms.google-services'
}

android {
    signingConfigs {
        release {
            storeFile file('../release_key.jks')
            storePassword 'polysmee'
            keyAlias 'release_key'
            keyPassword 'polysmee'
        }
    }
    compileSdkVersion 30
    buildToolsVersion "30.0.3"

    defaultConfig {
        applicationId "io.github.polysmee"
        minSdkVersion 24
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }

        debug {
            testCoverageEnabled true
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    implementation platform('com.google.firebase:firebase-bom:26.6.0')
    implementation 'com.google.firebase:firebase-auth'
    implementation 'com.google.firebase:firebase-database'
    implementation 'com.firebaseui:firebase-ui-auth:6.4.0'

    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'com.google.android.gms:play-services-auth:19.0.0'
    implementation 'pub.devrel:easypermissions:0.3.0'
    implementation('com.google.api-client:google-api-client-android:1.23.0') {
        exclude group: 'org.apache.httpcomponents'
    }
    implementation('com.google.apis:google-api-services-calendar:v3-rev305-1.23.0') {
        exclude group: 'org.apache.httpcomponents'
    }


    implementation 'com.google.android.gms:play-services-auth:19.0.0'
    implementation "androidx.cardview:cardview:1.0.0"
    implementation "androidx.activity:activity:1.2.2"
    implementation "androidx.fragment:fragment:1.3.3"
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'androidx.preference:preference:1.1.1'
    implementation 'com.google.android.material:material:1.3.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    implementation "androidx.core:core:1.3.2"
    implementation 'com.google.firebase:firebase-database:19.7.0'
    implementation 'com.google.firebase:firebase-storage'
    implementation 'com.github.duanhong169:colorpicker:1.1.6'

    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'commons-codec:commons-codec:1.14'

    implementation 'io.agora.rtc:full-sdk:3.3.1'
    implementation "androidx.recyclerview:recyclerview:1.1.0"

    // For control over item selection of both touch and mouse driven selection
    implementation "androidx.recyclerview:recyclerview-selection:1.1.0"


    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test:runner:1.3.0'
    androidTestImplementation 'androidx.test:rules:1.3.0'
    androidTestImplementation 'androidx.test.espresso:espresso-intents:3.3.0'
    androidTestImplementation 'com.android.support.test.espresso:espresso-contrib:3.0.2'
    androidTestImplementation 'com.schibsted.spain:barista:3.8.0'
    testImplementation 'junit:junit'
    debugImplementation "androidx.fragment:fragment-testing:1.3.3"
    androidTestImplementation 'androidx.test.uiautomator:uiautomator:2.2.0'
    testImplementation "org.mockito:mockito-core:3.9.0"
    androidTestImplementation "org.mockito:mockito-android:3.9.0"

    implementation 'org.slf4j:slf4j-api:1.7.25'
    implementation 'com.github.tony19:logback-android:1.1.1-12'

    implementation 'com.theartofdev.edmodo:android-image-cropper:2.8.+'
    implementation 'de.hdodenhof:circleimageview:3.1.0'
}

tasks.withType(Test) {
    jacoco.includeNoLocationClasses = true
    jacoco.excludes = ['jdk.internal.*']
}

allprojects {
    repositories {
        maven { url 'https://www.jitpack.io' }
    }
}
task jacocoTestReport(type: JacocoReport, dependsOn: ['testDebugUnitTest', 'createDebugCoverageReport']) {
    reports {
        xml.enabled = true
        html.enabled = true
    }

    def fileFilter = [
            '**/R.class',
            '**/R$*.class',
            '**/BuildConfig.*',
            '**/Manifest*.*',
            '**/*Test*.*',
            'android/**/*.*',
            // Exclude Hilt generated classes
            '**/*Hilt*.*',
            'hilt_aggregated_deps/**',
            '**/*_Factory.class',
            '**/*_MembersInjector.class'
    ]
    def debugTree = fileTree(dir: "$project.buildDir/intermediates/javac/debug/classes", excludes: fileFilter)
    def mainSrc = "$project.projectDir/src/main/java"

    sourceDirectories.setFrom(files([mainSrc]))
    classDirectories.setFrom(files([debugTree]))
    executionData.setFrom(fileTree(dir: project.buildDir, includes: [
            'jacoco/testDebugUnitTest.exec', 'outputs/code_coverage/debugAndroidTest/connected/*coverage.ec'
    ]))
}

connectedCheck {
    finalizedBy jacocoTestReport
}